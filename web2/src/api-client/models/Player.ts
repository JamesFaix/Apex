/* tslint:disable */
/* eslint-disable */
/**
 * Apex API
 * API for Apex
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Int32FSharpOption,
    Int32FSharpOptionFromJSON,
    Int32FSharpOptionFromJSONTyped,
    Int32FSharpOptionToJSON,
    PlayerKind,
    PlayerKindFromJSON,
    PlayerKindFromJSONTyped,
    PlayerKindToJSON,
    PlayerStatus,
    PlayerStatusFromJSON,
    PlayerStatusFromJSONTyped,
    PlayerStatusToJSON,
} from './';

/**
 * 
 * @export
 * @interface Player
 */
export interface Player {
    /**
     * 
     * @type {number}
     * @memberof Player
     */
    readonly id?: number;
    /**
     * 
     * @type {number}
     * @memberof Player
     */
    readonly gameId?: number;
    /**
     * 
     * @type {Int32FSharpOption}
     * @memberof Player
     */
    userId?: Int32FSharpOption;
    /**
     * 
     * @type {PlayerKind}
     * @memberof Player
     */
    kind?: PlayerKind;
    /**
     * 
     * @type {string}
     * @memberof Player
     */
    readonly name?: string | null;
    /**
     * 
     * @type {PlayerStatus}
     * @memberof Player
     */
    status?: PlayerStatus;
    /**
     * 
     * @type {Int32FSharpOption}
     * @memberof Player
     */
    colorId?: Int32FSharpOption;
    /**
     * 
     * @type {Int32FSharpOption}
     * @memberof Player
     */
    startingRegion?: Int32FSharpOption;
    /**
     * 
     * @type {Int32FSharpOption}
     * @memberof Player
     */
    startingTurnNumber?: Int32FSharpOption;
}

export function PlayerFromJSON(json: any): Player {
    return PlayerFromJSONTyped(json, false);
}

export function PlayerFromJSONTyped(json: any, ignoreDiscriminator: boolean): Player {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'gameId': !exists(json, 'gameId') ? undefined : json['gameId'],
        'userId': !exists(json, 'userId') ? undefined : Int32FSharpOptionFromJSON(json['userId']),
        'kind': !exists(json, 'kind') ? undefined : PlayerKindFromJSON(json['kind']),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'status': !exists(json, 'status') ? undefined : PlayerStatusFromJSON(json['status']),
        'colorId': !exists(json, 'colorId') ? undefined : Int32FSharpOptionFromJSON(json['colorId']),
        'startingRegion': !exists(json, 'startingRegion') ? undefined : Int32FSharpOptionFromJSON(json['startingRegion']),
        'startingTurnNumber': !exists(json, 'startingTurnNumber') ? undefined : Int32FSharpOptionFromJSON(json['startingTurnNumber']),
    };
}

export function PlayerToJSON(value?: Player | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'userId': Int32FSharpOptionToJSON(value.userId),
        'kind': PlayerKindToJSON(value.kind),
        'status': PlayerStatusToJSON(value.status),
        'colorId': Int32FSharpOptionToJSON(value.colorId),
        'startingRegion': Int32FSharpOptionToJSON(value.startingRegion),
        'startingTurnNumber': Int32FSharpOptionToJSON(value.startingTurnNumber),
    };
}


