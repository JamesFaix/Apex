/* tslint:disable */
/* eslint-disable */
/**
 * Djambi-N API
 * API for Djambi-N
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    GameStatus,
    GameStatusFromJSON,
    GameStatusFromJSONTyped,
    GameStatusToJSON,
} from './';

/**
 * 
 * @export
 * @interface GamesQueryDto
 */
export interface GamesQueryDto {
    /**
     * 
     * @type {number}
     * @memberof GamesQueryDto
     */
    gameId?: number | null;
    /**
     * 
     * @type {string}
     * @memberof GamesQueryDto
     */
    descriptionContains?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GamesQueryDto
     */
    createdByUserName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GamesQueryDto
     */
    playerUserName?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof GamesQueryDto
     */
    containsMe?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof GamesQueryDto
     */
    isPublic?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof GamesQueryDto
     */
    allowGuests?: boolean | null;
    /**
     * 
     * @type {Array<GameStatus>}
     * @memberof GamesQueryDto
     */
    statuses?: Array<GameStatus> | null;
    /**
     * 
     * @type {Date}
     * @memberof GamesQueryDto
     */
    createdBefore?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof GamesQueryDto
     */
    createdAfter?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof GamesQueryDto
     */
    lastEventBefore?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof GamesQueryDto
     */
    lastEventAfter?: Date | null;
}

export function GamesQueryDtoFromJSON(json: any): GamesQueryDto {
    return GamesQueryDtoFromJSONTyped(json, false);
}

export function GamesQueryDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GamesQueryDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'gameId': !exists(json, 'gameId') ? undefined : json['gameId'],
        'descriptionContains': !exists(json, 'descriptionContains') ? undefined : json['descriptionContains'],
        'createdByUserName': !exists(json, 'createdByUserName') ? undefined : json['createdByUserName'],
        'playerUserName': !exists(json, 'playerUserName') ? undefined : json['playerUserName'],
        'containsMe': !exists(json, 'containsMe') ? undefined : json['containsMe'],
        'isPublic': !exists(json, 'isPublic') ? undefined : json['isPublic'],
        'allowGuests': !exists(json, 'allowGuests') ? undefined : json['allowGuests'],
        'statuses': !exists(json, 'statuses') ? undefined : (json['statuses'] === null ? null : (json['statuses'] as Array<any>).map(GameStatusFromJSON)),
        'createdBefore': !exists(json, 'createdBefore') ? undefined : (json['createdBefore'] === null ? null : new Date(json['createdBefore'])),
        'createdAfter': !exists(json, 'createdAfter') ? undefined : (json['createdAfter'] === null ? null : new Date(json['createdAfter'])),
        'lastEventBefore': !exists(json, 'lastEventBefore') ? undefined : (json['lastEventBefore'] === null ? null : new Date(json['lastEventBefore'])),
        'lastEventAfter': !exists(json, 'lastEventAfter') ? undefined : (json['lastEventAfter'] === null ? null : new Date(json['lastEventAfter'])),
    };
}

export function GamesQueryDtoToJSON(value?: GamesQueryDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'gameId': value.gameId,
        'descriptionContains': value.descriptionContains,
        'createdByUserName': value.createdByUserName,
        'playerUserName': value.playerUserName,
        'containsMe': value.containsMe,
        'isPublic': value.isPublic,
        'allowGuests': value.allowGuests,
        'statuses': value.statuses === undefined ? undefined : (value.statuses === null ? null : (value.statuses as Array<any>).map(GameStatusToJSON)),
        'createdBefore': value.createdBefore === undefined ? undefined : (value.createdBefore === null ? null : value.createdBefore.toISOString()),
        'createdAfter': value.createdAfter === undefined ? undefined : (value.createdAfter === null ? null : value.createdAfter.toISOString()),
        'lastEventBefore': value.lastEventBefore === undefined ? undefined : (value.lastEventBefore === null ? null : value.lastEventBefore.toISOString()),
        'lastEventAfter': value.lastEventAfter === undefined ? undefined : (value.lastEventAfter === null ? null : value.lastEventAfter.toISOString()),
    };
}


