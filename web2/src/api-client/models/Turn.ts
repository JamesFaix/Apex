/* tslint:disable */
/* eslint-disable */
/**
 * Apex API
 * API for Apex
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Selection,
    SelectionFromJSON,
    SelectionFromJSONTyped,
    SelectionToJSON,
    SelectionKindFSharpOption,
    SelectionKindFSharpOptionFromJSON,
    SelectionKindFSharpOptionFromJSONTyped,
    SelectionKindFSharpOptionToJSON,
    TurnStatus,
    TurnStatusFromJSON,
    TurnStatusFromJSONTyped,
    TurnStatusToJSON,
} from './';

/**
 * 
 * @export
 * @interface Turn
 */
export interface Turn {
    /**
     * 
     * @type {TurnStatus}
     * @memberof Turn
     */
    status?: TurnStatus;
    /**
     * 
     * @type {Array<Selection>}
     * @memberof Turn
     */
    readonly selections?: Array<Selection> | null;
    /**
     * 
     * @type {Array<number>}
     * @memberof Turn
     */
    readonly selectionOptions?: Array<number> | null;
    /**
     * 
     * @type {SelectionKindFSharpOption}
     * @memberof Turn
     */
    requiredSelectionKind?: SelectionKindFSharpOption;
}

export function TurnFromJSON(json: any): Turn {
    return TurnFromJSONTyped(json, false);
}

export function TurnFromJSONTyped(json: any, ignoreDiscriminator: boolean): Turn {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': !exists(json, 'status') ? undefined : TurnStatusFromJSON(json['status']),
        'selections': !exists(json, 'selections') ? undefined : (json['selections'] === null ? null : (json['selections'] as Array<any>).map(SelectionFromJSON)),
        'selectionOptions': !exists(json, 'selectionOptions') ? undefined : json['selectionOptions'],
        'requiredSelectionKind': !exists(json, 'requiredSelectionKind') ? undefined : SelectionKindFSharpOptionFromJSON(json['requiredSelectionKind']),
    };
}

export function TurnToJSON(value?: Turn | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': TurnStatusToJSON(value.status),
        'requiredSelectionKind': SelectionKindFSharpOptionToJSON(value.requiredSelectionKind),
    };
}


