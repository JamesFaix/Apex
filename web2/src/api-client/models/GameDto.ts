/* tslint:disable */
/* eslint-disable */
/**
 * Apex API
 * API for Apex
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CreationSourceDto,
    CreationSourceDtoFromJSON,
    CreationSourceDtoFromJSONTyped,
    CreationSourceDtoToJSON,
    GameParametersDto,
    GameParametersDtoFromJSON,
    GameParametersDtoFromJSONTyped,
    GameParametersDtoToJSON,
    GameStatus,
    GameStatusFromJSON,
    GameStatusFromJSONTyped,
    GameStatusToJSON,
    PieceDto,
    PieceDtoFromJSON,
    PieceDtoFromJSONTyped,
    PieceDtoToJSON,
    PlayerDto,
    PlayerDtoFromJSON,
    PlayerDtoFromJSONTyped,
    PlayerDtoToJSON,
    TurnDto,
    TurnDtoFromJSON,
    TurnDtoFromJSONTyped,
    TurnDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface GameDto
 */
export interface GameDto {
    /**
     * 
     * @type {number}
     * @memberof GameDto
     */
    id: number;
    /**
     * 
     * @type {CreationSourceDto}
     * @memberof GameDto
     */
    createdBy: CreationSourceDto;
    /**
     * 
     * @type {GameParametersDto}
     * @memberof GameDto
     */
    parameters: GameParametersDto;
    /**
     * 
     * @type {GameStatus}
     * @memberof GameDto
     */
    status: GameStatus;
    /**
     * 
     * @type {Array<PlayerDto>}
     * @memberof GameDto
     */
    players: Array<PlayerDto>;
    /**
     * 
     * @type {Array<PieceDto>}
     * @memberof GameDto
     */
    pieces?: Array<PieceDto> | null;
    /**
     * 
     * @type {Array<number>}
     * @memberof GameDto
     */
    turnCycle?: Array<number> | null;
    /**
     * 
     * @type {TurnDto}
     * @memberof GameDto
     */
    currentTurn?: TurnDto;
}

export function GameDtoFromJSON(json: any): GameDto {
    return GameDtoFromJSONTyped(json, false);
}

export function GameDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdBy': CreationSourceDtoFromJSON(json['createdBy']),
        'parameters': GameParametersDtoFromJSON(json['parameters']),
        'status': GameStatusFromJSON(json['status']),
        'players': ((json['players'] as Array<any>).map(PlayerDtoFromJSON)),
        'pieces': !exists(json, 'pieces') ? undefined : (json['pieces'] === null ? null : (json['pieces'] as Array<any>).map(PieceDtoFromJSON)),
        'turnCycle': !exists(json, 'turnCycle') ? undefined : json['turnCycle'],
        'currentTurn': !exists(json, 'currentTurn') ? undefined : TurnDtoFromJSON(json['currentTurn']),
    };
}

export function GameDtoToJSON(value?: GameDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdBy': CreationSourceDtoToJSON(value.createdBy),
        'parameters': GameParametersDtoToJSON(value.parameters),
        'status': GameStatusToJSON(value.status),
        'players': ((value.players as Array<any>).map(PlayerDtoToJSON)),
        'pieces': value.pieces === undefined ? undefined : (value.pieces === null ? null : (value.pieces as Array<any>).map(PieceDtoToJSON)),
        'turnCycle': value.turnCycle,
        'currentTurn': TurnDtoToJSON(value.currentTurn),
    };
}


